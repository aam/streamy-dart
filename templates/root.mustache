
{{#docs}}/// {{.}}
{{/docs}}
class {{topLevelClassName}} extends streamy.Root {

  String get apiType => '{{discoveryName}}';

{{#resources}}
  {{type}} _{{name}};
  {{type}} get {{name}} {
    if (_{{name}} == null) {
      _{{name}} = new {{type}}(this);
    }
    return _{{name}};
  }
{{/resources}}

  final streamy.RequestHandler requestHandler;
  final streamy.Tracer tracer;
  final String servicePath;

  {{topLevelClassName}}(this.requestHandler, {this.servicePath: '{{servicePath}}',
      streamy.TypeRegistry typeRegistry: streamy.EMPTY_REGISTRY, this.tracer: const streamy.NoopTracer()}) : super(typeRegistry);

  Stream<streamy.Response> send(streamy.Request request) => requestHandler.handle(request, tracer.trace(request));
}
